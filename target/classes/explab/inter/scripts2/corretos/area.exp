classe Area {                   // classe de nome Area
    a = 10;                     // define um atributo da classe
    b = 10;                     // define outro atributo
	
    construtor() {}             // define um construtor vazio
	
    construtor( a, b ) {        // define um construtor que recebe 2 parâmetros
        este.a = a;             // não confundir os parâmetros com os atributos a e b,  
        este.b = b;             // pois, apesar de terem o mesmo nome, são variáveis diferentes.
    }                           // por isso a necessidade, nesse caso do operador "este" que referencia 
                                // os atributos "a" e "b", diferenciando-os dos parâmetros "a" e "b".	
    func area_retangulo() {     // definição de função com nome "area_retangulo"
        exibaln a+"  "+b;
        retorne a * b;         // retorno da função que utiliza os valores dos atributos "a" e "b" da classe
    }
	
    func area_triangulo() {     // definição da função: area_triangulo
        retorne ( a * b ) / 2;  // expressão de retorno
    }
	
    func area_circulo( r ) {    // definição da função: area_circulo
        retorne pi * r^2;       // expressão de retorno envolvendo o parâmetro "r" que não é atributo da classe
    } 
	
    func impdesc() {
        exibaln "classe Area!";
    }
}

a = novo Area();                   // instância da classe Area armazenada no objeto/variável "a"

circ_area = a.area_circulo( 10 );  // chamada da função area_circulo com parâmetro 10 para o raio. 

exibaln a.area_retangulo();        // chamada da função area_retângulo, imprime 100
exibaln a.area_triangulo();        // chamada da função area_triangulo, imprime 50
exibaln circ_area;                 // exibe o valor de circ_area, que vale pi*10. Imprime 314,1593

a2 = novo Area( 20, 20 );          // nova instância

exibaln a2.area_retangulo();       // imprime 400
exibaln a2.area_triangulo();       // imprime 200
exibaln a2.area_circulo( 20 );     // imprime 1256,6371
 
a3 = novo Area();                  // outra instância 
a3.a = 10;                         // atribui diretamente o valor 10 ao atributo "a" da classe Area
a3.b = 20;                         // atribui diretamente o valor 20 ao atributo "b" da classe Area

exibaln a3.area_retangulo();       // exibe 200
exibaln a3.area_triangulo();       // exibe 100
exibaln a3.area_circulo( 30 );     // exibe 2857,4334

a3.impdesc();                      // chamada de uma função sem tipo de retorno, imprime: classe area!
