classe Area {

    base = 2;
    altura = 3;
	
    construtor() {       // construtor sem parâmetros! utilizado em "novo Area()",
        este( 2, 1 );    // sem passagem de parâmetros, o operador ESTE, aqui, significa 
    }                    // uma chamada ao construtor de dois parâmetros que está logo abaixo. 
                         // Chamar esse construtor vazio é o mesmo que chamar o construtor 
                         // abaixo da seguinte forma: "novo Area( 2, 1 )"
	
    construtor( base, altura ) {    // esses parâmetros não têm nada ha ver ainda com os atributos
        este.base = base;           // a palavra ESTE diferencia o parâmetro do atributo 
		
        este.altura = altura;       // "este.altura" referencia o atributo altura e, 
                                    // a variável altura referencia o parâmetro passado na instância 
                                    // da classe (Não confunda!)
    }
	
    func areaRetangulo() {
        retorne base * este.altura;  // aqui o uso do este é opcional. Poderia-se utilizar 
                                     // este.base ou, apenas base e, do mesmo modo, este.altura 
                                     // ou, apenas, altura. Nesse caso o "este" é opcional porque não 
                                     // há a necessidade de diferenciar o atributo altura de um 
                                     // parâmetro ou variável local de nome também altura
    }
	
    func areaTriangulo() {
        retorne ( base * altura ) / 2;
    }
	
    func umQuartoAreaTriangulo() {   
        retorne este.areaTriangulo() / 4;    // um quarto da área do triângulo. A palavra "este" 
    }                                        // foi utilizada para referenciar a função.                                              // Inclusive, o uso da palavra "este" aqui também é opcional
	
    func getInstancia() {
        retorne este;                        // retorna uma referência ao próprio objeto
    }
	
}

a1 = novo Area( 2, 4 );           // altera o atributo base de a1 para 2 e altura para 4
a2 = novo Area( 4, 5 );           // altera a base para 4 e a altura para 5

xx = a1.areaRetangulo();   // imprime: Area do retângulo (1)=8
yy = a1.areaTriangulo();   // imprime: Area do triângulo (1)=4
zz = a1.umQuartoAreaTriangulo();  // imprime: Area do quarto do triângulo (1)= 1

ww = a2.areaRetangulo();    // imprime: Area do retângulo (2)=20
xxx = a2.areaTriangulo();   // imprime: Area do triângulo (2)=10

yyy = a1 == a1.getInstancia();    // imprime: verdade