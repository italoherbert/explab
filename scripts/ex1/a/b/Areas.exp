pacote a.b;

classe AreaCirculo {
    r = 1;

    construtor() {}   // Como foi definido outro construtor não vazio, sem esse construtor não é 
                      // possível instanciar a classe sem passar parâmetros para o construtor.
                      // Sem esse construtor não seria válido fazer: "novo AreaCirculo();"
	
    construtor( r ) {
        este.r = r;
    }	
	
    func area() {
        retorne PI * r^2;
    }	
}

classe AreaRetangulo {
    base = 0;
    altura = 0;
    
    construtor( base, altura ) {    // como essa classe tem apenas esse construtor, não é possível 
        este.base = base;           // instanciar sem erro essa classe sem passar dois parâmetros para 		
        este.altura = altura;       // o construtor (Do mesmo modo com a classe AreaTriangulo)		
    }	
    
    func area() {
        retorne base * altura;
    }
}

classe AreaTriangulo {
    base = 0;
    altura = 0;
    
    construtor( base, altura ) {
        este.base = base;
        este.altura = altura;		
    }	
    
    func area() {
        retorne ( base * altura ) / 2;
    }
}

classe MeiaArea {
	
    obj = null;
	
    construtor( obj ) {
        este.obj = obj;
    }
	
    func area() {
        retorne obj.area() / 2;
    }
}

classe MeiaAreaCalculador {		
    func area( obj ) {
        retorne novo MeiaArea( obj ).area();  // Desvantágem de alocar um novo objeto 
    }                                         // após cada chamada dessa função. Mas, 
}     